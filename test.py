import unittest
import numpy as np

from solver import MSTSolver

class TestMSTSolver(unittest.TestCase):
    """TestMSTSolver
    
    Test cases for the MSTSolver class
    """

    def run_test(self, weight_matrix, target_weight_matrix):
        """Solve the MST problem and compare the result to the target MST"""
        mst_weight_matrix = MSTSolver(weight_matrix).solve()
        self.assertTrue(np.array_equal(mst_weight_matrix, target_weight_matrix))


    def test_graph_1(self):
        weight_matrix = np.array([
            [0, 1, 5, 0, 9],
            [0, 0, 2, 7, 0],
            [0, 0, 0, 3, 1],
            [0, 0, 0, 0, 14],
            [0, 0, 0, 0, 0],
        ])
        mst_weight_matrix = np.array([
            [0, 1, 0, 0, 0],
            [0, 0, 2, 0, 0],
            [0, 0, 0, 3, 1],
            [0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0],
        ])
        self.run_test(weight_matrix, mst_weight_matrix)


    def test_graph_2(self):
        weight_matrix = np.array([
            [0, 1, 0, 0, 0],
            [0, 0, 2, 0, 0],
            [0, 0, 0, 3, 1],
            [0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0],
        ])
        mst_weight_matrix = np.array([
            [0, 1, 0, 0, 0],
            [0, 0, 2, 0, 0],
            [0, 0, 0, 3, 1],
            [0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0],
        ])
        self.run_test(weight_matrix, mst_weight_matrix)


    def test_graph_3(self):
        weight_matrix = np.array([
            [0, 1, 1, 1, 1],
            [0, 0, 1, 1, 1],
            [0, 0, 0, 1, 1],
            [0, 0, 0, 0, 1],
            [0, 0, 0, 0, 0],
        ])
        mst_weight_matrix = np.array([
            [0, 1, 1, 1, 1],
            [0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0]
        ])
        self.run_test(weight_matrix, mst_weight_matrix)


    def test_graph_4(self):
        weight_matrix = np.array([
            [0, 1, 1, 1, 5],
            [0, 0, 1, 1, 5],
            [0, 0, 0, 1, 5],
            [0, 0, 0, 0, 5],
            [0, 0, 0, 0, 0],
        ])
        mst_weight_matrix = np.array([
            [0, 1, 1, 1, 5],
            [0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0]
        ])
        self.run_test(weight_matrix, mst_weight_matrix)


    def test_graph_5(self):
        weight_matrix = np.array([
            [0, 1, 1, 0, 1],
            [0, 0, 1, 0, 0],
            [0, 0, 0, 1, 1],
            [0, 0, 0, 0, 1],
            [0, 0, 0, 0, 0],
        ])
        mst_weight_matrix = np.array([
            [0, 1, 1, 0, 1],
            [0, 0, 0, 0, 0],
            [0, 0, 0, 1, 0],
            [0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0]
        ])
        self.run_test(weight_matrix, mst_weight_matrix)


    def test_graph_6(self):
        weight_matrix = np.array([
            [0, 4, 6, 16, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 24, 0, 0],
            [0, 0, 0, 8, 5, 23, 0, 0],
            [0, 0, 0, 0, 10, 0, 0, 21],
            [0, 0, 0, 0, 0, 18, 11, 14],
            [0, 0, 0, 0, 0, 0, 9, 0],
            [0, 0, 0, 0, 0, 0, 0, 7],
            [0, 0, 0, 0, 0, 0, 0, 0],
        ])
        mst_weight_matrix = np.array([
            [0, 4, 6, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 8, 5, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 11, 0],
            [0, 0, 0, 0, 0, 0, 9, 0],
            [0, 0, 0, 0, 0, 0, 0, 7],
            [0, 0, 0, 0, 0, 0, 0, 0]
        ])
        self.run_test(weight_matrix, mst_weight_matrix)


    def test_graph_7(self):
        weight_matrix = np.array([
            [0, 8, 0, 0, 4, 8, 0, 0, 0, 2, 8, 7, 0, 9, 5, 7, 0, 0, 0, 10],
            [0, 0, 9, 0, 1, 1, 0, 2, 0, 0, 2, 7, 0, 3, 4, 5, 0, 8, 0, 0],
            [0, 0, 0, 0, 10, 3, 4, 0, 10, 0, 4, 0, 0, 9, 8, 0, 2, 0, 0, 1],
            [0, 0, 0, 0, 3, 0, 6, 0, 0, 9, 0, 3, 5, 0, 10, 0, 0, 0, 0, 3],
            [0, 0, 0, 0, 0, 0, 5, 0, 0, 10, 0, 0, 9, 2, 4, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 3, 7, 0, 0, 1, 0, 0, 0, 0, 3, 4, 0, 2, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 1, 8, 8, 4, 5, 0, 9, 0, 6],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 6, 4, 3, 0, 0, 0, 9, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 9, 9, 8, 6],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 8, 6, 7, 7, 7, 0, 5, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 9, 0, 0, 0, 10, 9, 5],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 7, 5, 1],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 7, 9, 0, 7, 3, 3],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 3],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 5, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        ])
        mst_weight_matrix = np.array([
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1],
            [0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 1],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        ])
        self.run_test(weight_matrix, mst_weight_matrix)


if __name__ == '__main__':
    unittest.main()